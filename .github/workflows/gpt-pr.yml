name: GPT PR Gateway
on:
  issue_comment:
    types: [created, edited]   # يشتغل لما تكتب/تعدل تعليق يبدأ بـ /gpt-pr

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  pr:
    if: startsWith(github.event.comment.body, '/gpt-pr')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # اسم حسابك هنا (اترك القائمة كما هي لو حسابك Bomussa)
      - name: Allowlist
        shell: bash
        run: |
          ALLOWLIST="Bomussa IyadMousa iyad-mousa"
          ok=1
          for u in $ALLOWLIST; do
            [ "${{ github.actor }}" = "$u" ] && ok=0 && break
          done
          [ $ok -eq 0 ] || { echo "::error::Actor not allowed"; exit 1; }

      - name: Parse comment blocks
        id: parse
        env:
          BODY: ${{ github.event.comment.body }}
          DEFAULT_BASE: ${{ github.event.repository.default_branch }}
        run: |
          node - <<'NODE'
          const fs=require('fs'), path=require('path');
          const body=process.env.BODY||'';
          const def=process.env.DEFAULT_BASE||'main';
          const pick=(re, d)=> (body.match(re)?.[1] ?? d).trim();

          const title = pick(/title\s*:\s*([^\n]+)/i, `GPT PR ${new Date().toISOString()}`);
          const branch= pick(/branch\s*:\s*([^\n]+)/i, `gpt-pr/${Date.now()}`);
          const base  = pick(/base\s*:\s*([^\n]+)/i, def);

          const files=[];
          const re=/```file:([^\n]+)\n([\s\S]*?)```/g;
          let m;
          while((m=re.exec(body))!==null){
            const file=m[1].trim();
            const content=m[2];
            fs.mkdirSync(path.dirname(file),{recursive:true});
            fs.writeFileSync(file,content,'utf8');
            files.push(file);
            console.log('WROTE',file);
          }
          if(!files.length){ console.error('No file blocks found. Use ```file:path\\n...```'); process.exit(1); }
          fs.writeFileSync('.gpt-pr-meta.json', JSON.stringify({title,branch,base,files},null,2));
          NODE

      - name: Load meta
        id: meta
        run: echo "meta=$(cat .gpt-pr-meta.json)" >> "$GITHUB_OUTPUT"

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ fromJson(steps.meta.outputs.meta).branch }}
          base:   ${{ fromJson(steps.meta.outputs.meta).base }}
          title:  ${{ fromJson(steps.meta.outputs.meta).title }}
          commit-message: "chore: apply GPT patch"
          body: "Automated PR via /gpt-pr by @${{ github.actor }}."
