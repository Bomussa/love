name: Deploy (Vercel: main + backup)

# NOTE: Automated deployments on push to main have been intentionally removed.
# This workflow must be triggered manually via workflow_dispatch.
# Please document any changes to deployment triggers here.
on:
  workflow_dispatch:
    inputs:
      backup_branch:
        description: 'Backup branch to deploy as preview'
        required: true
        default: lock/frontend-guard-ci
      alias:
        description: 'Optional alias for backup (e.g., backup.mmc-mms.com)'
        required: false

jobs:
  deploy_main:
    name: Deploy main → Production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable corepack
        run: |
          if command -v corepack >/dev/null 2>&1; then
            corepack enable
          else
            echo "Error: corepack not found in PATH. Please ensure Node.js 16+ is installed."
            exit 1
          fi
      - name: Ensure pnpm (via Corepack)
        run: corepack prepare pnpm@10.19.0 --activate
      - name: Install deps
        run: pnpm install --no-frozen-lockfile
      - name: Build
        run: pnpm build || npm run build --if-present
      - name: Install Vercel CLI
        run: npm i -g vercel@latest
      - name: Vercel pull (prod)
        run: vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Vercel build (prod)
        run: vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Vercel deploy (prod)
        id: deploy_main
        run: echo "url=$(vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  deploy_backup:
    name: Deploy backup → Preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.backup_branch }}
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable corepack
        run: corepack enable || true
      - name: Ensure pnpm
        run: pnpm -v || npm i -g pnpm
      - name: Install deps
        run: pnpm install --no-frozen-lockfile || npm ci || npm install
      - name: Build
        run: pnpm build || npm run build --if-present
      - name: Install Vercel CLI
        run: npm i -g vercel@latest
      - name: Vercel pull (preview)
        run: vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Vercel build (preview)
        run: vercel build --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Vercel deploy (preview)
        id: deploy_backup
        run: echo "url=$(vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Optional alias
        if: ${{ github.event.inputs.alias != '' }}
        run: vercel alias set ${{ steps.deploy_backup.outputs.url }} ${{ github.event.inputs.alias }} --token ${{ secrets.VERCEL_TOKEN }}

  smoke:
    name: Smoke (front + health + ping)
    runs-on: ubuntu-latest
    needs: deploy_main
    steps:
      - name: Front
        run: curl -fsSL -o /dev/null -w '%{http_code} %{time_total}\n' https://mmc-mms.com
      - name: Healthz
        run: curl -fsSL -o /dev/null -w '%{http_code} %{time_total}\n' https://mmc-mms.com/api/v1/healthz
      - name: Ping
        run: curl -fsSL -o /dev/null -w '%{http_code} %{time_total}\n' 'https://mmc-mms.com/api/v1/ping?x=1'
