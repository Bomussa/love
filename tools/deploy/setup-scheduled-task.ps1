param(
  [string]$TaskPrefix = 'MMS',
  [string]$Mode = 'quick',   # quick | token
  [int]$Port = 3000,
  [switch]$UseOfficialRun,   # عند التفعيل سيشغل cloudflared tunnel run <TunnelName>
  [string]$TunnelName = 'mms-tunnel',
  [string]$CloudflaredPath = ''
)

# Generated by Copilot
Set-StrictMode -Version Latest
$ErrorActionPreference = 'Stop'

Import-Module ScheduledTasks -ErrorAction Stop

$projectRoot = Resolve-Path (Join-Path $PSScriptRoot '..\..')
$taskUser = "$env:USERDOMAIN\\$env:USERNAME"

Write-Host "[tasks] Project: $projectRoot"

# Server task
$serverName = "$TaskPrefix-Server"
$serverAction = New-ScheduledTaskAction -Execute 'powershell.exe' -Argument "-NoProfile -ExecutionPolicy Bypass -Command cd '$projectRoot'; npm run -s start:resilient" -WorkingDirectory $projectRoot
$trigger = New-ScheduledTaskTrigger -AtLogOn
$serverTask = New-ScheduledTask -Action $serverAction -Trigger $trigger
Register-ScheduledTask -TaskName $serverName -InputObject $serverTask -User $taskUser -Force | Out-Null
Write-Host "[tasks] Created task: $serverName"

# Cloudflare task (quick vs official run)
$cfName = "$TaskPrefix-Cloudflare"
if ($UseOfficialRun) {
  $exe = (if ($CloudflaredPath) { $CloudflaredPath } else { 'cloudflared' })
  $cfAction = New-ScheduledTaskAction -Execute $exe -Argument "tunnel run $TunnelName" -WorkingDirectory $projectRoot
  $cfTask = New-ScheduledTask -Action $cfAction -Trigger $trigger
  Register-ScheduledTask -TaskName $cfName -InputObject $cfTask -User $taskUser -Force | Out-Null
  Write-Host "[tasks] Created task: $cfName (official run)"
} else {
  $cfFile = Join-Path $projectRoot 'tools\deploy\cloudflare.ps1'
  $cfArgs = "-NoProfile -ExecutionPolicy Bypass -File '$cfFile' -Mode $Mode -Port $Port"
  $cfAction = New-ScheduledTaskAction -Execute 'powershell.exe' -Argument $cfArgs -WorkingDirectory $projectRoot
  $cfTask = New-ScheduledTask -Action $cfAction -Trigger $trigger
  Register-ScheduledTask -TaskName $cfName -InputObject $cfTask -User $taskUser -Force | Out-Null
  Write-Host "[tasks] Created task: $cfName (Mode=$Mode)"
}

Write-Host "[tasks] Done. You can manage tasks in Task Scheduler (taskschd.msc)."
